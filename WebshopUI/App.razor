@inject WebshopUI.Services.Tokens.TokenProvider TokenProvider

@code {
    [Parameter]
    public WebshopUI.Services.Tokens.InitialApplicationState InitialState { get; set; }

    protected override Task OnInitializedAsync()
    {
        
        TokenProvider.XsrfToken = InitialState.XsrfToken;
        TokenProvider.AccessToken = InitialState.AccessToken;
        TokenProvider.RefreshToken = InitialState.RefreshToken;
        TokenProvider.ExpiresAt = InitialState.ExpiresAt;
        
        

        return base.OnInitializedAsync();
    }
}
<CascadingAuthenticationState>
<Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData"
                                DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <RedirectToLogin></RedirectToLogin>
                </NotAuthorized>
            </AuthorizeRouteView>
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>
</CascadingAuthenticationState>
